1.     1
2.     11
3.     21
4.     1211
5.     111221
1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211.


class Solution:
    def countAndSay(self, n: int) -> str:
        if n == 1:
            return ("1")
        res=''
        ct=1
        prev=self.countAndSay(n-1)
        for i in range(len(prev)):
            if (i==len(prev)-1) or (prev[i]!=prev[i+1]) :
                res+=str(ct)+prev[i]
                ct=1
            else:
                ct+=1
        return res
